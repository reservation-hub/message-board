version: "3.7"
volumes:
  server-node_modules:
  client-node_modules:
  data-node:

services:

  # node apps
  client:
    build:
      context: .
      dockerfile: docker/client/Dockerfile
    container_name: prototype-client
    environment:
      - COMMAND=${COMMAND:-start}
    env_file:
      - .env
    image: prototype-client
    ports:
      - 8080:3000
    volumes:
      - ./app/client:/app
      - client-node_modules:/app/node_modules
    tty: true
  
  # db
  db:
    image: mongo:4.2
    container_name: prototype_mongodb
    volumes:
        - data-node:/data/db
    ports:
        - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root

  # server
  server:
    build:
      context: .
      dockerfile: docker/server/Dockerfile
    container_name: prototype-server
    image: prototype-server
    environment:
      - NODE_ENV=development
      - COMMAND=${COMMAND:-serve}
      - PORT=8090
    env_file:
      - .env.development
    ports: 
      - 8090:8090
    volumes:
      - ./app/server:/app
      - server-node_modules:/app/node_modules
    tty: true
    depends_on:
      - db

  server-prd:
    build:
      context: .
      dockerfile: docker/server/Dockerfile
    container_name: prototype-server_prd
    image: prototype-server_prd
    environment: 
      - NODE_ENV=production
      - COMMAND=${COMMAND:-start}
      - PORT=8090
    # env_file: 
    #   - .env.production
    ports: 
      - 8090:8090
    depends_on:
      - db